rules_version = '2';
function isSignedIn() {
	return request.auth != null;
}

function emailVerified() {
  return request.auth.token.email_verified;
}

function isUser(userId) {
  return request.auth.uid == userId;
}

function currentUserId() {
  return request.auth.uid;
}

function existingData() {
  return resource.data;
}

function incomingData() {
  return request.resource.data;
}

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /users/{userId} {
      // TODO: Users can read themselves or other users in their workspace.
      allow read: if isSignedIn()
      // Users can only write themselves.
      allow write: if isSignedIn() && isUser(incomingData().uid);
    }
  	match /workspaces/{workspaceId} {
      // Users can create workspaces if they are logged in and have a verified email.
    	allow create: if isSignedIn() && emailVerified() && isUser(incomingData().createdBy);
      // TODO: Users can only read and update workspaces that they belong to or they are invited to.
      allow read, update: if isSignedIn();
    }
    match /retroBoards/{retroBoardId} {
    	// TODO: Users can only create retro boards that belong to their workspace.
      allow read, write: if isSignedIn()
    }
    match /invitedUsers/{invitedUserId} {
    	// TODO: Users can only see other users in their workspace.
      allow read, write: if isSignedIn()
    }
  }
}