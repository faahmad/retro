name: Deploy Retro 

on:
  push:
    branches:
    - master

jobs:
   # This code builds the server and then deploys to app engine
  deploy-server:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository.
      uses: actions/checkout@master

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    - name: Setup Node.
      uses: actions/setup-node@v1
    
    - name: Install server dependencies.
      run:  npm install
    
    - name: Create server build.
      run:  npm run build
    
    - name: Initialize Google Cloud SDK.
      uses: zxyle/publish-gae-action@master
      with:
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.PROJECT_ID }}
        gae_variables: ${{ secrets.GAE_VARIABLES }}

    - name: Publish app to Google App Engine.
      run: |
        gcloud auth activate-service-account ${{ secrets.GCP_SA_EMAIL }} --key-file=client-secret.json
        gcloud config set project ${{ secrets.PROJECT_ID }}
        gcloud -q app deploy app.yaml --promote

  # This code builds and deploys the firebase functions
  deploy-firebase-functions:
    needs: deploy-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@master
      
      - name: Deploy to functions to Firebase.
        uses: w9jds/firebase-action@master
        with:
          args: deploy --project prod --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  
  # This builds the web application and uploads an artifact.
  build-web-application:
    needs: deploy-firebase-functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@master
      
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Install web dependencies.
        run: npm install
      
      - name: Build web application.
        run: npm run build
      
      - name: Archive web application artifact.
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build
  
  # This deploys the web application to Firebase Hosting.
  deploy-web-application:
    needs: build-web-application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@master
      
      - name: Download web application artifact.
        uses: actions/download-artifact@master
        with:
          name: build
      
      - name: Deploy to web app to firebase hosting.
        uses: w9jds/firebase-action@master
        with:
          args: deploy --project prod --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}



  
